{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"PY ORM Documentation: https://jaroslav2001.github.io/py-orm Source Code: https://github.com/Jaroslav2001/py-orm ORM based on pydantic model example code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 from typing import Optional from py_orm import ( BaseModel , Field , Create , py_orm_app , set_config , Read , T , Config , ) set_config ( Config ( url = 'sqlite://data.db' , migrate_dir = 'data' , ) ) class UserBase ( BaseModel ): name : str class UserDB ( UserBase ): __tabel_name__ = 'user' id : Optional [ int ] = Field ( primary_key = True , auto_increment = True ) class UserCreate ( UserBase ): __tabel_model__ = UserDB class User ( UserBase ): __tabel_model__ = UserDB id : int = Field ( primary_key = True , auto_increment = True ) py_orm_app () def main (): from py_orm.driver.sync import connect connect_ = connect () cursor = connect_ . cursor () create = Create ( UserCreate ) cursor . exec_create ( create , UserCreate ( name = 'Hello' ) ) print ( create ) read_only : Read [ User ] = Read ( User ) . where ( T ( c = 'id' ) == T ( 'id' )) print ( read_only ()) print ( read_only ) cursor . exec_read ( read_only , id = 1 ) print ( list ( cursor . get_all ( User ) )) read : Read [ User ] = Read ( User ) . where ( T ( c = 'name' ) == T ()) print ( read ()) cursor . exec_read ( read , 'Hello' ) print ( list ( cursor . get_all ( User ) )) connect_ . commit () if __name__ == '__main__' : main ()","title":"Py ORM"},{"location":"#py-orm","text":"Documentation: https://jaroslav2001.github.io/py-orm Source Code: https://github.com/Jaroslav2001/py-orm","title":"PY ORM"},{"location":"#orm-based-on-pydantic-model","text":"example code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 from typing import Optional from py_orm import ( BaseModel , Field , Create , py_orm_app , set_config , Read , T , Config , ) set_config ( Config ( url = 'sqlite://data.db' , migrate_dir = 'data' , ) ) class UserBase ( BaseModel ): name : str class UserDB ( UserBase ): __tabel_name__ = 'user' id : Optional [ int ] = Field ( primary_key = True , auto_increment = True ) class UserCreate ( UserBase ): __tabel_model__ = UserDB class User ( UserBase ): __tabel_model__ = UserDB id : int = Field ( primary_key = True , auto_increment = True ) py_orm_app () def main (): from py_orm.driver.sync import connect connect_ = connect () cursor = connect_ . cursor () create = Create ( UserCreate ) cursor . exec_create ( create , UserCreate ( name = 'Hello' ) ) print ( create ) read_only : Read [ User ] = Read ( User ) . where ( T ( c = 'id' ) == T ( 'id' )) print ( read_only ()) print ( read_only ) cursor . exec_read ( read_only , id = 1 ) print ( list ( cursor . get_all ( User ) )) read : Read [ User ] = Read ( User ) . where ( T ( c = 'name' ) == T ()) print ( read ()) cursor . exec_read ( read , 'Hello' ) print ( list ( cursor . get_all ( User ) )) connect_ . commit () if __name__ == '__main__' : main ()","title":"ORM based on pydantic model"},{"location":"fast_start/","text":"Fast start","title":"Fast start"},{"location":"fast_start/#fast-start","text":"","title":"Fast start"},{"location":"tutorial/install/","text":"Install Py ORM install py_orm pip install py_orm Install py_orm in sql driver","title":"Install Py ORM"},{"location":"tutorial/install/#install-py-orm","text":"install py_orm pip install py_orm","title":"Install Py ORM"},{"location":"tutorial/install/#install-py_orm-in-sql-driver","text":"","title":"Install py_orm in sql driver"},{"location":"tutorial/setting/","text":"Setting Py ORM","title":"Setting Py ORM"},{"location":"tutorial/setting/#setting-py-orm","text":"","title":"Setting Py ORM"},{"location":"tutorial/crud/","text":"","title":"Index"},{"location":"tutorial/driver/","text":"","title":"Index"},{"location":"tutorial/migrations/","text":"","title":"Index"},{"location":"tutorial/model/","text":"Model PY ORM","title":"Model PY ORM"},{"location":"tutorial/model/#model-py-orm","text":"","title":"Model PY ORM"}]}